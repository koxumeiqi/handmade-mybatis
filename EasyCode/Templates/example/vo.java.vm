##引入宏定义
$!{define.vm}
$!{mybatisCodehelper.vm}


##使用宏定义设置回调（保存位置与文件后缀）
###save("/entity", ".java")

###foreach($column in $tableInfo.fullColumn)
##        $!column.setName($column.obj.name)
###end


#set($dtoSavePath = $tool.append(${dtoSrcFolder},"/",${dtoPackageName.replace(".","/")}))

$!callback.setSavePath($dtoSavePath)


$!callback.setFileName($tool.append($dtoClassName, ".java"))
##使用宏定义设置包后缀
package ${dtoPackageName};
##使用全局变量实现默认包导入
$!{autoImport.vm}
import java.io.Serializable;
#if(${useLombok})
import lombok.Data;
#end
#if($useSwagger)
import io.swagger.annotations.ApiModel;
#end
#if($useOpenApi)
import io.swagger.v3.oas.annotations.media.Schema;
#end

##使用宏定义实现类注释信息
#tableComment("实体类")

##check if use lombok

#if(${useLombok})
@Data
#end
#if($useSwagger)
@ApiModel(value = "$!{tableInfo.name}" , description = "$!{tableInfo.comment}" )
#end
#if($useOpenApi)
@Schema(name = "$!{tableInfo.name}" , description = "$!{tableInfo.comment}" )
#end
public class $!{dtoClassName} implements Serializable{

##    public static String tableName = "$!{tableInfo.obj.name}"
##
##
##    public static String[] allColumNames = {#foreach($column in $tableInfo.fullColumn)"$column.obj.name"#if($velocityHasNext), #end#end}

private static final long serialVersionUID= $!tool.serial();
#foreach($column in $tableInfo.fullColumn)
    #if(${column.comment})/**
     * ${column.comment}
     */#end
    #if(${column.getName()})
    #end
    #if($useSwagger)
    @ApiModelProperty(value = "${column.comment}" )
    #end
    #if($useOpenApi)
    @Schema(description = "${column.comment}" )
    #end

private $!{tool.getClsNameByFullName($column.type)} $!{column.name};

#end

#foreach($column in $tableInfo.fullColumn)
    ##使用宏定义实现get,set方法
    #getSetMethod($column)
#end

}
